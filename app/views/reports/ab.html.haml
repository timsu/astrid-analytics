:css
  thead tr { background-color: #333; color: white }
  .variant, .variant td { background-color: #ccc !important; color: black; font-weight: bold }
  .results { background-color: #acf; color: black; font-weight: bold }
  .significance { background-color: #def; color: black; font-weight: bold }
  .empty { text-align: center; padding: 50px }
  .plus { color: #090 }
  .minus { color: #900 }
  a[data-edit=null_variant] i { opacity: 0.3 }
  td[data-day] { text-align: center }
  td[data-day="0"] { border-left: 1px solid black }

:javascript
  $(document).on("click", "[data-edit=description]", function() {
    var parent = $(this).parents(".row");
    var desc = prompt("Enter Description for this Test:")
    if(desc) {
      $(".description", parent).text(desc)
      $.post("/admin/edit_test",
        { test: parent.data("test"), account: '#{@account}', description: desc });
    }
  });

  $(document).on("click", "[data-edit=archive]", function() {
    var parent = $(this).parents(".row");
    var archive = confirm("Archive this test?")
    if(archive) {
      $(parent).fadeOut();
      $.post("/admin/edit_test",
        { test: parent.data("test"), account: '#{@account}', archive: true });
    }
  });

  $(document).on("click", "[data-edit=unarchive]", function() {
    var parent = $(this).parents(".row");
    $.post("/admin/edit_test", 
      { test: parent.data("test"), account: '#{@account}', unarchive: true },
      function() { window.location.hash = "#" + parent.data("test"); window.location.reload(); });
  });

  $(document).on("click", "[data-edit=null_variant]", function() {
    var parent = $(this).parents(".row");
    var variant = $(this).parents(".variant");
    $.post("/admin/edit_test", 
      { test: parent.data("test"), account: '#{@account}', null_variant: variant.data("variant") },
      function() { window.location.hash = "#" + parent.data("test"); window.location.reload(); });
  });

  $(document).on("click", "[data-edit=filter]", function() {
    var parent = $(this).parents(".row");
    $(".form-filter", parent).toggle();
    return false;
  });

.row
  .span12
    .page-header
      %h1 
        Tests for #{@account_data["name"]}
        %small
          %a(href="/") Home

- if @tests.empty?
  .row
    .span12.empty
      No Tests!

- @tests.each do |test|
  - test_data = @test_data[test]
  .row(data-test="#{test}")
    .span12.well
      %a(name="#{test}")

      .pull-right
        %a(href="#" title="Edit Description" data-edit="description")
          %i.icon-pencil
        %a(href="#" title="Select Displayed Columns" data-edit="filter")
          %i.icon-th-list
        %a(href="#" title="Archive This Test" data-edit="archive")
          %i.icon-trash

      %h2
        = test
        %small.description= test_data[:description]

      = form_tag "/admin/edit_test", :method => :post, :class => "alert alert-info form-filter form-inline hide" do
        %div(style="float: right")
          = submit_tag "Save", :class => "btn btn-mini btn-success"
          %button.btn.btn-mini.btn-cancel(data-edit="filter") Cancel
        %strong Show Columns:
        = hidden_field_tag :test, test
        = hidden_field_tag :account, @account
        %label.checkbox
          = check_box_tag "filter[new]", "yes", test_data[:user_groups].include?(:new)
          New Users
        %label.checkbox
          = check_box_tag "filter[ea]", "yes", test_data[:user_groups].include?(:ea)
          Existing Activated
        %label.checkbox
          = check_box_tag "filter[eu]", "yes", test_data[:user_groups].include?(:eu)
          Existing Unactivated
        %label.checkbox
          = check_box_tag "filter[ref]", "yes", test_data[:user_groups].include?(:ref)
          Referrals 
        %label.checkbox
          = check_box_tag "filter[rev]", "yes", test_data[:user_groups].include?(:rev)
          Revenue and Premium Users

      %table.table
        %thead
          %tr
            %th(colspan=1) Launched: #{test_data[:dates].first}
            - test_data[:user_groups].each do |user_state|
              %th(colspan="#{test_data[:days].length}") 
                - if user_state == :new
                  New Users
                - elsif user_state == :ea
                  Existing Activated
                - elsif user_state == :eu
                  Existing Unactivated

        - test_data[:variants].each do |variant|
          - variant_data = @variant_data[test][variant]
          %tr.variant(data-variant="#{variant}")
            %td
              Variant: #{variant}
              - if variant == test_data[:null_variant]
                %a(title="Null Hypothesis")
                  %i.icon-flag
              - else
                %a(href="#" title="Choose this variant as Null Hypothesis" data-edit="null_variant")
                  %i.icon-flag
            - test_data[:user_groups].each do |user_state|
              - test_data[:days].each do |day|
                %td(data-day="#{day}") +#{day}
          %tr
            %td Total opened x days ago
            - test_data[:user_groups].each do |user_state|
              - test_data[:days].each do |day|
                %td(data-day="#{day}")= variant_data[user_state][day][:total]
          %tr
            %td Opened x days after first open
            - test_data[:user_groups].each do |user_state|
              - test_data[:days].each do |day|
                %td(data-day="#{day}")= variant_data[user_state][day][:opened]
          %tr
            %td % Retained
            - test_data[:user_groups].each do |user_state|
              - test_data[:days].each do |day|
                %td(data-day="#{day}")
                  - if variant_data[user_state][day][:total] == 0
                    \-
                  - else 
                    = number_to_percentage variant_data[user_state][day][:retained]

        - result_data = @variant_data[test][:summary]
        %tr.results
          %td Results
          - test_data[:user_groups].each do |user_state|
            - test_data[:days].each do |day|
              %td(data-day="#{day}") +#{day}

          %tr
            %td Delta retention (%)
            - test_data[:user_groups].each do |user_state|
              - test_data[:days].each do |day|
                %td(data-day="#{day}" class="#{result_data[user_state][day][:plusminus]}")
                  = number_with_precision result_data[user_state][day][:delta]
                  - if result_data[user_state][day][:percent]
                    (#{number_to_percentage result_data[user_state][day][:percent], :precision => 0})
          %tr.significance
            %td Significant to 95%?
            - test_data[:user_groups].each do |user_state|
              - test_data[:days].each do |day|
                %td(data-day="#{day}")
                  %span= result_data[user_state][day][:chisqsig]
                  %span= number_with_precision result_data[user_state][day][:chisqp]

      %hr

- unless @archived.empty?
  .row
    .span12
      .page-header
        %h3 Archived Tests

  - @archived.each do |test|
    - test_data = @test_data[test]
    .row(data-test="#{test}")
      .span12.well

        %h2
          %a(href="#" title="Unarchive This Test" data-edit="unarchive")= test

